// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  userName    String?  @unique @default("")
  OAuthName   String   @unique
  email       String?  @unique @default("")
  avatar      String?  @default("https://avatarfiles.alphacoders.com/183/183501.jpg")
  updatedAt   DateTime @updatedAt
  accessToken String   @default("None")
  is2Fa       Boolean  @default(false)
  homeMatches Match[]  @relation("Home")
  awayMatches Match[]  @relation("Away")
  wonMatches  Match[]  @relation("Winner")
  blockedBy   Blocked[] @relation("BlockedBy")
  blockedUsers   Blocked[] @relation("Blocked")

  sentFriendRequest FriendRequest[] @relation("SentRequest")
  recievedFriendRequest FriendRequest[] @relation("RecievedRequest")

  friends User[] @relation("UserFriends")
  friendsOf User[] @relation("UserFriends")
}

model Match {
  id      Int      @id @default(autoincrement())
  started DateTime
  ended   DateTime

  homePlayer   User @relation("Home", fields: [homePlayerId], references: [id])
  homePlayerId Int
  awayPlayer   User @relation("Away", fields: [awayPlayerId], references: [id])
  awayPlayerId Int
  winner       User @relation("Winner", fields: [winnerId], references: [id])
  winnerId     Int

  homeScore Int
  awayScore Int
}

model FriendRequest {
  sent  User @relation("SentRequest", fields: [senderId], references: [id])
  senderId Int
  recieved  User @relation("RecievedRequest", fields: [recieverId], references: [id])
  recieverId  Int

  status FriendRequestStatus @default(PENDING)

  @@unique([senderId, recieverId])
}

enum FriendRequestStatus {
  PENDING
  ACCEPTED
  DECLINED
} 

model Blocked {
  blockedUser User @relation("BlockedBy", fields: [blockedUserId], references: [id])
  blockedUserId Int
  blockingUser User @relation("Blocked", fields: [blockingUserId], references: [id])
  blockingUserId Int

  @@unique([blockingUserId, blockedUserId])
}